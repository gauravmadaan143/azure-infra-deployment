trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'  # Use Microsoft-hosted agent

variables:
  resource_group: "demo-rg"
  vm_name: "demo-vm"
  location: "westeurope"

stages:
  - stage: Terraform
    displayName: "Terraform Deployment"
    jobs:
      - job: TerraformInitPlanApply
        displayName: "Run Terraform"
        steps:
          - checkout: self

          - task: Bash@3
            displayName: "Install Terraform Manually"
            inputs:
              targetType: 'inline'
              script: |
                echo "Cleaning old terraform binary or directory..."
                rm -rf terraform terraform.zip
          
                echo "Downloading Terraform..."
                curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
          
                echo "Unzipping..."
                unzip terraform.zip || { echo "Unzip failed"; exit 1; }
          
                echo "Installing..."
                sudo mv terraform /usr/local/bin/
          
                echo "Terraform Version:"
                terraform -version
          
          - task: Bash@3
            displayName: "Terraform Init"
            inputs:
              targetType: 'inline'
              script: |
                cd terraform
                terraform init

          - task: Bash@3
            displayName: "Terraform Plan"
            inputs:
              targetType: 'inline'
              script: |
                terraform plan -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)"

          - task: Bash@3
            displayName: "Terraform Apply"
            inputs:
              targetType: 'inline'
              script: |
                terraform apply -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)" -auto-approve
