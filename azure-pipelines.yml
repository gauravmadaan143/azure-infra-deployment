trigger:
  branches:
    include:
      - main

variables:
  resource_group: "demo-rg"
  vm_name: "demo-vm"
  location: "westeurope"  # Azure-supported EU region closest to "eu-est-1"

stages:
  - stage: Terraform
    jobs:
      - job: TerraformInitPlanApply
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self

          - task: Bash@3
            displayName: "Install Terraform"
            inputs:
              targetType: 'inline'
              script: |
                curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
                unzip terraform.zip
                sudo mv terraform /usr/local/bin/
                terraform -version

          - task: Bash@3
            displayName: "Terraform Init"
            inputs:
              targetType: 'inline'
              script: |
                cd terraform
                terraform init

          - task: Bash@3
            displayName: "Terraform Plan"
            inputs:
              targetType: 'inline'
              script: |
                cd terraform
                terraform plan -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)"

          - task: Bash@3
            displayName: "Terraform Apply"
            inputs:
              targetType: 'inline'
              script: |
                cd terraform
                terraform apply -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)" -auto-approve

  - stage: Ansible
    dependsOn: Terraform
    jobs:
      - job: RunAnsible
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self

          - task: Bash@3
            displayName: "Run Ansible Playbook"
            inputs:
              targetType: 'inline'
              script: |
                sudo apt-get update
                sudo apt-get install -y ansible
                ansible-playbook -i '<VM_PUBLIC_IP>,' ansible/playbook.yml --user azureuser --extra-vars "ansible_password='P@ssword1234!'" --ssh-extra-args='-o StrictHostKeyChecking=no'
